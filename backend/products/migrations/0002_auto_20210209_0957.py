# Generated by Django 3.1.6 on 2021-02-09 09:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [("products", "0001_initial")]

    operations = [
        migrations.RemoveField(model_name="product", name="ean"),
        migrations.RemoveField(model_name="product", name="product_url"),
        migrations.RemoveField(model_name="product", name="shop"),
        migrations.AddField(
            model_name="product",
            name="url_to_scrape_product",
            field=models.URLField(
                default="", unique=True, verbose_name="Url to scrape product"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="shopdata",
            name="logo",
            field=models.ImageField(
                blank=True, default="no-image-available.jpg", upload_to="assets/images"
            ),
        ),
        migrations.CreateModel(
            name="ProductShop",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "shop_product_name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Shop product name"
                    ),
                ),
                (
                    "ean",
                    models.CharField(
                        blank=True, max_length=17, null=True, verbose_name="EAN Code"
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                0, "Price cannot be less than 0!"
                            )
                        ],
                        verbose_name="Gross Price",
                    ),
                ),
                (
                    "delivery_price",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                0, "Price cannot be less than 0!"
                            )
                        ],
                        verbose_name="Delivery Price",
                    ),
                ),
                (
                    "url_to_shop",
                    models.URLField(unique=True, verbose_name="Url to shop"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="product_shop",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "shop",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="product",
                        to="products.shopdata",
                        verbose_name="Shop",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Shop",
                "verbose_name_plural": "Products Shop",
            },
        ),
    ]
